--- a/arch/arm/mach-gemini/devices.c.orig	2011-04-23 01:00:16.738137491 +0200
+++ b/arch/arm/mach-gemini/devices.c	2011-04-23 01:06:55.539299920 +0200
@@ -278,3 +278,63 @@
 	return platform_device_register(&ethernet_device);
 }
 
+static struct resource usb0_resources[] = {
+	{
+		.start  = GEMINI_USB0_BASE,
+		.end    = GEMINI_USB0_BASE + 0xfff,
+		.flags  = IORESOURCE_MEM,
+	},
+	{
+		.start  = IRQ_USB0,
+		.end    = IRQ_USB0,
+		.flags  = IORESOURCE_IRQ,
+	},
+};
+
+static struct resource usb1_resources[] = {
+	{
+		.start  = GEMINI_USB1_BASE,
+		.end    = GEMINI_USB1_BASE + 0xfff,
+		.flags  = IORESOURCE_MEM,
+	},
+	{
+		.start  = IRQ_USB1,
+		.end    = IRQ_USB1,
+		.flags  = IORESOURCE_IRQ,
+	},
+};
+
+static u64 usb0_dmamask = 0xffffffffUL;
+static u64 usb1_dmamask = 0xffffffffUL;
+
+static struct platform_device usb_device[] = {
+	{
+		.name   = "ehci-fotg2xx",
+		.id     = 0,
+		.dev    = {
+			.dma_mask = &usb0_dmamask,
+			.coherent_dma_mask = 0xffffffff,
+		},
+		.num_resources  = ARRAY_SIZE(usb0_resources),
+		.resource       = usb0_resources,
+	},
+	{
+		.name   = "ehci-fotg2xx",
+		.id     = 1,
+		.dev    = {
+			.dma_mask = &usb1_dmamask,
+			.coherent_dma_mask = 0xffffffff,
+		},
+		.num_resources  = ARRAY_SIZE(usb1_resources),
+		.resource       = usb1_resources,
+	},
+};
+
+int platform_register_usb(unsigned int i)
+{
+	if (i > 1)
+		return -EINVAL;
+
+	return platform_device_register(&usb_device[i]);
+}
+
--- a/arch/arm/mach-gemini/common.h.orig	2011-04-23 01:09:31.413161153 +0200
+++ b/arch/arm/mach-gemini/common.h	2011-04-23 01:09:52.426358514 +0200
@@ -30,5 +30,6 @@
 extern int platform_register_pata(unsigned int i);
 extern int platform_register_watchdog(void);
 extern int platform_register_ethernet(struct gemini_gmac_platform_data *pdata);
+extern int platform_register_usb(unsigned int i);
 
 #endif /* __GEMINI_COMMON_H__ */
--- a/arch/arm/mach-gemini/board-nas4220b.c.orig	2011-04-23 01:08:34.030159642 +0200
+++ b/arch/arm/mach-gemini/board-nas4220b.c	2011-04-23 01:09:19.187131113 +0200
@@ -152,11 +152,22 @@
 		GLOBAL_ARBITRATION1_CTRL);
 }
 
+static void __init usb_ib4220b_init(void)
+{
+	unsigned int val;
+
+	val = readl(IO_ADDRESS(GEMINI_GLOBAL_BASE) + GLOBAL_MISC_CTRL);
+	val &= ~(USB0_PLUG_MINIB | USB1_PLUG_MINIB);
+	val |= USB0_VBUS_ON | USB1_VBUS_ON;
+	writel(val, IO_ADDRESS(GEMINI_GLOBAL_BASE) + GLOBAL_MISC_CTRL);
+}
+
 static void __init ib4220b_init(void)
 {
 	gemini_gpio_init();
 	sata_ib4220b_init();
 	gmac_ib4220b_init();
+	usb_ib4220b_init();
 	platform_register_uart();
 	platform_register_pflash(SZ_16M, NULL, 0);
 	platform_device_register(&ib4220b_led_device);
@@ -168,6 +179,8 @@
 	platform_register_watchdog();
 	platform_device_register (&ib4220b_phy_device);
 	platform_register_ethernet (&ib4220b_gmac_data);
+	platform_register_usb(0);
+	platform_register_usb(1);
 }
 
 MACHINE_START(NAS4220B, "Raidsonic NAS IB-4220-B")
--- a/drivers/usb/Kconfig
+++ b/drivers/usb/Kconfig
@@ -67,6 +67,7 @@ config USB_ARCH_HAS_EHCI
 	default y if ARCH_AT91SAM9G45
 	default y if ARCH_MXC
 	default y if ARCH_OMAP3
+	default y if ARCH_GEMINI
 	default y if ARCH_CNS3XXX
 	default y if ARCH_VT8500
 	default y if PLAT_SPEAR
--- a/drivers/usb/host/ehci-hcd.c
+++ b/drivers/usb/host/ehci-hcd.c
@@ -1209,6 +1209,11 @@ MODULE_LICENSE ("GPL");
 #define	PCI_DRIVER		ehci_pci_driver
 #endif
 
+#ifdef CONFIG_ARCH_GEMINI
+#include "ehci-fotg2xx.c"
+#define PLATFORM_DRIVER		fotg2xx_ehci_driver
+#endif
+
 #ifdef CONFIG_USB_EHCI_FSL
 #include "ehci-fsl.c"
 #define	PLATFORM_DRIVER		ehci_fsl_driver
